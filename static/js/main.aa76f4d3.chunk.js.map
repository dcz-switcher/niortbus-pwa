{"version":3,"sources":["assets/line-numbers.png","assets/ic_close_white_24px.svg","assets/ic_compare_arrows_white_24px.svg","assets/ic_keyboard_arrow_down_black_24px.svg","config.js","components/LineButton.js","views/HomeView.js","components/DetailHeader.js","components/StopItem.js","components/ModalPeriod.js","components/DetailPeriod.js","views/DetailView.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","Config","lines","busId","color","start","end","numberPosition","data","require","LineButton","line","onSelect","className","onClick","style","backgroundColor","backgroundImage","LineNumbers","backgroundPosition","HomeView","map","index","key","DetailHeader","onBack","onInvert","src","backBtn","alt","invertArrow","StopItem","props","clickHandler","value","expanded","id","clicked","state","stop","this","hourScroll","stops","item","hourIndexSelected","hourClicked","name","Component","ModalPeriod","list","periods","period","onCancel","DetailPeriod","periodLabel","onTap","downArrow","DetailView","hourClickedHandler","setState","onInvertHandler","stopItemExpanded","invertDirection","onPeriodSelected","periodIndexSelected","showModalPeriod","direction","departure","arrival","periodes","App","lineSelected","onSelectHandler","_lineSelected","showDetailView","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.aa76f4d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/line-numbers.f9a6cf82.png\";","module.exports = __webpack_public_path__ + \"static/media/ic_close_white_24px.7b66831c.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic_compare_arrows_white_24px.1643e4c0.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic_keyboard_arrow_down_black_24px.cd90a7ab.svg\";","const Config  = {\n    lines : [\n        {busId : '1', color: '#ED1D25', start: 'Université', end: 'Chauray', numberPosition: '74px 0', data: require('./lines/ligne1.json')},\n        {busId : '2', color: '#00854B', start: 'Bessines', end: 'Brizeaux CAF', numberPosition: '74px -64px', data: require('./lines/ligne2.json')},\n        {busId : '3', color: '#5EC4AE', start: 'Pôle Universitaire', end: 'Terre de sport', numberPosition: '74px -128px', data: require('./lines/ligne3.json')},\n        {busId : '4', color: '#E78093', start: 'Sainte Pezenne', end: 'Aiffres', numberPosition: '74px -192px', data: require('./lines/ligne4.json')},\n        {busId : '5', color: '#2C77BB', start: 'Chaintre brûlée', end: 'Château Driguet', numberPosition: '74px -256px', data: require('./lines/ligne5.json')},\n        {busId : '6', color: '#8CC63E', start: 'St Liguaire', end: 'Coubertin', numberPosition: '74px -320px', data: require('./lines/ligne6.json')},\n        {busId : '7', color: '#A4548B', start: 'Pôle Atlantique', end: 'Maisons Rouges', numberPosition: '74px -395px', data: require('./lines/ligne7.json')},\n        {busId : '8', color: '#DE2370', start: 'Surimeau', end: 'Hôpital', numberPosition: '74px -470px', data: require('./lines/ligne8.json')},\n        {busId : '9', color: '#F49719', start: 'Pôle Atlantique', end: 'Collège Curie', numberPosition: '74px -550px', data: require('./lines/ligne9.json')},\n        {busId : '10', color: '#793329', start: 'Cholette', end: 'Trente Ormeaux', numberPosition: '74px 0', data: require('./lines/ligne10.json')},\n    ],\n}\n\nexport default Config;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './LineButton.css';\nimport LineNumbers from './../assets/line-numbers.png'\n\n\nconst LineButton = ({line, onSelect}) => (\n    <div className=\"Line-button\" onClick={() => onSelect()} style={{backgroundColor: line.color}}>\n        <div className=\"Line-number\" style={{backgroundImage : 'url(' + LineNumbers + ')', backgroundPosition: line.numberPosition}}></div>\n        <div className=\"Line-endpoints\">\n            <div className=\"Line-stop\">{line.start}</div>\n            <div className=\"Line-stop\">{line.end}</div>\n        </div>\n    </div>\n\n)\n\nLineButton.propTypes = {\n    line: PropTypes.object.isRequired,\n    onSelect: PropTypes.func.isRequired,\n};\n\nexport default LineButton;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './HomeView.css';\n\nimport Config from './../config';\n\nimport LineButton from './../components/LineButton';\n\nconst HomeView = ({onSelect}) => (\n    <div className=\"Home-view\">\n        <header className=\"Home-header\">\n            <h4>Niort bus</h4>\n            <h1>Lignes TAN</h1>\n        </header>\n        <div className=\"Home-body\">\n            {\n                Config.lines.map((line, index) => {\n                    return <LineButton key={line.busId} \n                            line={line}\n                            onSelect={() => onSelect(line)} />;\n                })\n            }\n        </div>\n    </div>\n);\n\nHomeView.propTypes = {\n    onSelect: PropTypes.func.isRequired,\n}\n\n\nexport default HomeView;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport LineNumbers from './../assets/line-numbers.png'\nimport backBtn from './../assets/ic_close_white_24px.svg';\nimport invertArrow from './../assets/ic_compare_arrows_white_24px.svg';\n\nimport './DetailHeader.css';\n\nconst DetailHeader = ({color, numberPosition, start, end, onBack, onInvert}) => (\n    <div className=\"Line-header\" style={{backgroundColor: color}}>\n        <div className=\"Line-number\" style={{backgroundImage : 'url(' + LineNumbers + ')', backgroundPosition: numberPosition}}></div>\n        <div className=\"Line-endpoints\">\n            <div className=\"Line-stop\">{start}</div>\n            <div className=\"Line-stop\">{end}</div>\n        </div>\n        <img src={backBtn} className=\"Back-btn\" onClick={onBack} alt=''/>\n        <img src={invertArrow} className=\"Invert-arrow\" onClick={onInvert} alt=''/>\n    </div>\n);\n\n\nDetailHeader.propTypes = {\n    color: PropTypes.string.isRequired,\n    numberPosition: PropTypes.string.isRequired,\n    start: PropTypes.string.isRequired,\n    end: PropTypes.string.isRequired,\n    onBack: PropTypes.func.isRequired,\n    onInvert: PropTypes.func.isRequired,\n}\n\nexport default DetailHeader;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport './StopItem.css';\n\n\nexport default class StopItem extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {};\n    }\n\n    // syntax for get access to \"this\"\n    clickHandler = () => {\n        const value = (this.props.expanded) ? null : this.props.id;\n        \n        this.props.clicked(value);\n    }\n\n    \n    render(){\n\n        const stop = this.props.stop;\n        const color = this.props.color;\n        const expanded = this.props.expanded;\n\n\n        const hourScroll = (expanded) ? (stop.stops.map((item, index) => {\n            if (index === this.props.hourIndexSelected) {\n                return (\n                    <div key={index} onClick={() => this.props.hourClicked(index)} className=\"HourScroller-selected\">\n                        <span className='HourScroller-item'>\n                            {item}\n                        </span>\n                    </div>\n                )\n            } \n\n            return (\n                <div key={index} className='HourScroller-item' onClick={() => this.props.hourClicked(index)}>{item}</div>\n            )\n        })) : null;\n\n        return (expanded) ?\n        ( // expanded\n            <div className='Stop-item'>\n                <div className='Stop-detail-expanded' style={{backgroundColor: color}}>\n                    <div className='Dot'></div>\n                    <div className='Name'>{stop.name}</div>\n                </div>\n                <div className='Hour-scroller' style={{backgroundColor: color}}>\n                    {hourScroll}\n                </div>\n                <div className='Stop-action'>\n                    <div className='Line'></div>\n                </div>\n            </div>\n        ):( // not expanded\n            <div className='Stop-item' onClick={this.clickHandler}>\n                <div className='Stop-detail'>\n                    <div className='Hour'>{stop.stops[this.props.hourIndexSelected]}</div>\n                    <div className='Dot'></div>\n                    <div className='Name'>{stop.name}</div>\n                </div>\n                <div className='Stop-action'>\n                    <div className='Line'></div>\n                </div>\n            </div>\n        )\n    }\n}\n\nStopItem.propTypes = {\n    id: PropTypes.number.isRequired,\n    clicked: PropTypes.func.isRequired,\n    hourClicked: PropTypes.func.isRequired,\n    hourIndexSelected: PropTypes.number.isRequired,\n    stop: PropTypes.object.isRequired,\n    color: PropTypes.string.isRequired,\n    expanded: PropTypes.bool.isRequired,\n};\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ModalPeriod.css';\n\nexport default class ModalPeriod extends Component{\n\n    render() {\n\n        const list = this.props.periods.map((period, index) => {\n            return <li key={index} onClick={() => this.props.onSelect(index)}>{period.name}</li>\n        });\n\n        return (\n            <div className='Modal-period'>\n                <div className='Overlay-opacity' onClick={this.props.onCancel}></div>\n                <div className='Modal-content'>\n                    <div className='Modal-title'>Périodes</div>\n                    <ul>\n                    {list}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nModalPeriod.propTypes = {\n    periods: PropTypes.array.isRequired,\n    onSelect: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport downArrow from './../assets/ic_keyboard_arrow_down_black_24px.svg';\n\nimport './DetailPeriod.css';\n\nconst DetailPeriod = ({periodLabel, onTap}) => (\n    <div className=\"Period-selector\" onClick={onTap}>\n        <div className='Period-label'>{periodLabel}</div>\n        <img src={downArrow} alt='' className='Down-arrow'/>\n    </div>\n);\n\nexport default DetailPeriod;\n\nDetailPeriod.propTypes = {\n    periodLabel: PropTypes.string.isRequired,\n    onTap: PropTypes.func.isRequired,\n}","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport './DetailView.css';\n\nimport DetailHeader from './../components/DetailHeader';\nimport StopItem from './../components/StopItem';\nimport ModalPeriod from './../components/ModalPeriod';\nimport DetailPeriod from './../components/DetailPeriod';\n\nexport default class DetailView extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            stopItemExpanded: null,\n            periodIndexSelected: 0,\n            hourIndexSelected: 0,\n            invertDirection: false,\n            showModalPeriod: false,\n        };\n    }\n\n    hourClickedHandler = (index) => {\n        this.setState({hourIndexSelected: index});\n    }\n    \n\n    onInvertHandler = () => {\n        this.setState({stopItemExpanded: null});\n        this.setState({invertDirection: !this.state.invertDirection});\n    }\n\n    onPeriodSelected = (index) => {\n        this.setState({periodIndexSelected: index});\n        this.setState({showModalPeriod: false});\n    }\n\n    render() {\n\n        const line = this.props.line;\n        const data = line.data;\n\n        var direction = 'aller';\n        var start = data.departure;\n        var end = data.arrival;\n        \n        // invert direction if wanted\n        if (this.state.invertDirection) {\n            direction = 'retour';\n            start = data.arrival;\n            end = data.departure;\n        }\n        \n\n        //console.log(data.periodes[this.state.periodIndexSelected][direction]);\n\n        return (\n            <div className='Detail-view'>\n\n                <DetailHeader start={start} end={end} \n                        color={line.color} \n                        numberPosition={line.numberPosition}\n                        onBack={this.props.onBack}\n                        onInvert={this.onInvertHandler}\n                        />\n\n                <DetailPeriod \n                    periodLabel={data.periodes[this.state.periodIndexSelected]['name']}\n                    onTap={() => this.setState({showModalPeriod: true})}/>              \n\n                <div className='Detail-stops'>\n                    {\n                        data.periodes[this.state.periodIndexSelected][direction].map((stop, index) => {\n                            return <StopItem key={index}\n                                        id={index} \n                                        stop={stop}\n                                        color={line.color}\n                                        expanded={index === this.state.stopItemExpanded}\n                                        hourIndexSelected={this.state.hourIndexSelected}\n                                        clicked={(id) => this.setState({stopItemExpanded: id})}\n                                        hourClicked={this.hourClickedHandler}\n                                        />\n                        })\n                    }\n                </div>\n\n                {this.state.showModalPeriod === true &&\n                    <ModalPeriod\n                        periods={data.periodes}\n                        onSelect={this.onPeriodSelected}\n                        onCancel={() => this.setState({showModalPeriod: false})}/>\n                }\n\n            </div>\n        );\n    }\n}\n\n\nDetailView.propTypes = {\n    onBack: PropTypes.func.isRequired,\n    line: PropTypes.shape({\n        busId: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n        start: PropTypes.string.isRequired,\n        end: PropTypes.string.isRequired,\n        numberPosition: PropTypes.string.isRequired,\n        data: PropTypes.object.isRequired,\n    }).isRequired,\n}","import React, { Component } from 'react';\n\nimport './App.css';\n\nimport HomeView from './views/HomeView';\nimport DetailView from './views/DetailView';\n\n\nclass App extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            lineSelected: null,\n        };\n    }\n\n    render() {\n\n        const _lineSelected = this.state.lineSelected;\n        const showDetailView = _lineSelected !== null ? (\n            <DetailView onBack={this.onBack} line={_lineSelected} />\n        ) \n        : ( null );\n\n        return (\n            <div className=\"App\">\n                <HomeView onSelect={this.onSelectHandler}/>\n\n                {showDetailView}\n            </div>\n        );\n    }\n\n    onBack = () => {\n        this.setState({lineSelected: null});\n    }\n\n    onSelectHandler = (line) => {\n        this.setState({lineSelected: line});\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}